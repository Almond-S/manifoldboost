% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfGeometry.R
\name{mfGeomEuclidean}
\alias{mfGeomEuclidean}
\title{Euclidean Geometry Class}
\description{
Euclidean Geometry Class

Euclidean Geometry Class
}
\details{
An R6 class defining the Euclidean geometry for a single vector.
This class is typically not too much of practical interest, as in this case
the \code{Family} could typically by defined without it. However, it serves
as parent for most other geometries.
}
\section{Super class}{
\code{\link[manifoldboost:mfGeometry]{manifoldboost::mfGeometry}} -> \code{mfGeomEuclidean}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-structure}{\code{mfGeomEuclidean$structure()}}
\item \href{#method-unstructure}{\code{mfGeomEuclidean$unstructure()}}
\item \href{#method-align}{\code{mfGeomEuclidean$align()}}
\item \href{#method-distance}{\code{mfGeomEuclidean$distance()}}
\item \href{#method-register}{\code{mfGeomEuclidean$register()}}
\item \href{#method-exp}{\code{mfGeomEuclidean$exp()}}
\item \href{#method-log}{\code{mfGeomEuclidean$log()}}
\item \href{#method-transport}{\code{mfGeomEuclidean$transport()}}
\item \href{#method-innerprod}{\code{mfGeomEuclidean$innerprod()}}
\item \href{#method-get_normal}{\code{mfGeomEuclidean$get_normal()}}
\item \href{#method-validate}{\code{mfGeomEuclidean$validate()}}
\item \href{#method-clone}{\code{mfGeomEuclidean$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="manifoldboost" data-topic="mfGeometry" data-id="unstructure_weights">}\href{../../manifoldboost/html/mfGeometry.html#method-unstructure_weights}{\code{manifoldboost::mfGeometry$unstructure_weights()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-structure"></a>}}
\if{latex}{\out{\hypertarget{method-structure}{}}}
\subsection{Method \code{structure()}}{
method for structuring either objects \code{y},
tangent vectors \code{v}, or weight vectors \code{weights}. Usually the
identity, except for complex vectors. FOR COMPLEX VECTORS USE WITH CARE:
STILL ORDER DEPENDEND.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$structure(y, v, weights, y0_ = private$.y_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y}}{a numeric vector}

\item{\code{v}}{a numeric vector}

\item{\code{weights}}{a numeric vector}

\item{\code{y0_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-unstructure"></a>}}
\if{latex}{\out{\hypertarget{method-unstructure}{}}}
\subsection{Method \code{unstructure()}}{
inverse of \code{$structure}. FOR COMPLEX VECTORS USE WITH CARE:
STILL ORDER DEPENDEND.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$unstructure(y_, v_, weights_, y0_ = private$.y_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a numeric/complex vector}

\item{\code{v_}}{a (tangent) numeric/complex vector}

\item{\code{weights_}}{a numeric vector of the same length as \code{y_} / \code{pole_}}

\item{\code{y0_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-align"></a>}}
\if{latex}{\out{\hypertarget{method-align}{}}}
\subsection{Method \code{align()}}{
The identity.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$align(y_, y0_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a numeric/complex vector}

\item{\code{y0_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-distance"></a>}}
\if{latex}{\out{\hypertarget{method-distance}{}}}
\subsection{Method \code{distance()}}{
Compute the L2 distance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$distance(y_, y0_, squared = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a numeric/complex vector}

\item{\code{y0_}}{a numeric/complex vector}

\item{\code{squared}}{logical, should squared distance be returned?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-register"></a>}}
\if{latex}{\out{\hypertarget{method-register}{}}}
\subsection{Method \code{register()}}{
The identity.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$register(y_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exp"></a>}}
\if{latex}{\out{\hypertarget{method-exp}{}}}
\subsection{Method \code{exp()}}{
Simple addition.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$exp(v_, y0_ = private$.pole_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v_}}{a (tangent) numeric/complex vector}

\item{\code{y0_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-log"></a>}}
\if{latex}{\out{\hypertarget{method-log}{}}}
\subsection{Method \code{log()}}{
Simple substraction.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$log(y_, y0_ = private$.pole_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a numeric/complex vector}

\item{\code{y0_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-transport"></a>}}
\if{latex}{\out{\hypertarget{method-transport}{}}}
\subsection{Method \code{transport()}}{
The identity.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$transport(v0_, y0_, y1_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v0_}}{a (tangent) numeric/complex vector}

\item{\code{y0_}}{a numeric/complex vector}

\item{\code{y1_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-innerprod"></a>}}
\if{latex}{\out{\hypertarget{method-innerprod}{}}}
\subsection{Method \code{innerprod()}}{
The weighted scalar product.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$innerprod(v0_, v1_ = v0_, weights_ = private$.weights_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v0_}}{a (tangent) numeric/complex vector}

\item{\code{v1_}}{a (tangent) numeric/complex vector}

\item{\code{weights_}}{a numeric vector of the same length as \code{y_} / \code{pole_}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_normal"></a>}}
\if{latex}{\out{\hypertarget{method-get_normal}{}}}
\subsection{Method \code{get_normal()}}{
Always returning \code{NULL}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$get_normal(y0_ = private$.pole_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y0_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
Check whether numeric or complex.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$validate(y_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a numeric/complex vector}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomEuclidean$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
