% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfGeometry.R
\name{mfGeomPlanarShape}
\alias{mfGeomPlanarShape}
\title{Planar Shape Space Geometry}
\description{
Geometry of the 'classic' shape space identifying planar shapes
with a centered and scaled complex vector on the complex sphere / complex
projective space.
}
\section{Super classes}{
\code{\link[manifoldboost:mfGeometry]{manifoldboost::mfGeometry}} -> \code{\link[manifoldboost:mfGeomEuclidean]{manifoldboost::mfGeomEuclidean}} -> \code{\link[manifoldboost:mfGeomUnitSphere]{manifoldboost::mfGeomUnitSphere}} -> \code{mfGeomPlanarShape}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-mfGeomPlanarShape-new}{\code{mfGeomPlanarShape$new()}}
\item \href{#method-mfGeomPlanarShape-structure}{\code{mfGeomPlanarShape$structure()}}
\item \href{#method-mfGeomPlanarShape-unstructure}{\code{mfGeomPlanarShape$unstructure()}}
\item \href{#method-mfGeomPlanarShape-unstructure_weights}{\code{mfGeomPlanarShape$unstructure_weights()}}
\item \href{#method-mfGeomPlanarShape-structure_weights}{\code{mfGeomPlanarShape$structure_weights()}}
\item \href{#method-mfGeomPlanarShape-register}{\code{mfGeomPlanarShape$register()}}
\item \href{#method-mfGeomPlanarShape-register_v}{\code{mfGeomPlanarShape$register_v()}}
\item \href{#method-mfGeomPlanarShape-log}{\code{mfGeomPlanarShape$log()}}
\item \href{#method-mfGeomPlanarShape-transport}{\code{mfGeomPlanarShape$transport()}}
\item \href{#method-mfGeomPlanarShape-plot}{\code{mfGeomPlanarShape$plot()}}
\item \href{#method-mfGeomPlanarShape-validate}{\code{mfGeomPlanarShape$validate()}}
\item \href{#method-mfGeomPlanarShape-get_normal}{\code{mfGeomPlanarShape$get_normal()}}
\item \href{#method-mfGeomPlanarShape-clone}{\code{mfGeomPlanarShape$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="manifoldboost" data-topic="mfGeometry" data-id="distance"><a href='../../manifoldboost/html/mfGeometry.html#method-mfGeometry-distance'><code>manifoldboost::mfGeometry$distance()</code></a></li>
<li><span class="pkg-link" data-pkg="manifoldboost" data-topic="mfGeomEuclidean" data-id="align"><a href='../../manifoldboost/html/mfGeomEuclidean.html#method-mfGeomEuclidean-align'><code>manifoldboost::mfGeomEuclidean$align()</code></a></li>
<li><span class="pkg-link" data-pkg="manifoldboost" data-topic="mfGeomEuclidean" data-id="innerprod"><a href='../../manifoldboost/html/mfGeomEuclidean.html#method-mfGeomEuclidean-innerprod'><code>manifoldboost::mfGeomEuclidean$innerprod()</code></a></li>
<li><span class="pkg-link" data-pkg="manifoldboost" data-topic="mfGeomUnitSphere" data-id="exp"><a href='../../manifoldboost/html/mfGeomUnitSphere.html#method-mfGeomUnitSphere-exp'><code>manifoldboost::mfGeomUnitSphere$exp()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-new"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-new}{}}}
\subsection{Method \code{new()}}{
Initialize planar shape geometry for data given
in (long) FDboost format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$new(data, formula, weight_fun = NULL, arg_range = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{data in the format used in \code{\link{FDboost}}.}

\item{\code{formula}}{formula describing the internal structure of the data,
intended for the \code{obj.formula} of \code{mfboost}
(interpreted by \code{mfInterpret_objformula}).}

\item{\code{weight_fun}}{a function computing inner product weights for the geometry
taking two arguments: \code{arg}, the argument of the functional data
specified in \code{formula}, \code{range} the range of \code{arg}.}

\item{\code{arg_range}}{the \code{range} supplied to the \code{weight_fun}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-structure"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-structure}{}}}
\subsection{Method \code{structure()}}{
convert 2D vectors (given in long format with dimension
indicator) to complex
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$structure(y)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y}}{a numeric vector representing an element of the manifold in an
unstructured way. The position of elements and dimensions is obtained from
the initialization of the geometry.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-unstructure"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-unstructure}{}}}
\subsection{Method \code{unstructure()}}{
convert complex back to long format numeric
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$unstructure(y_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a complex vector on the sphere, orthogonal to the constant.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-unstructure_weights"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-unstructure_weights}{}}}
\subsection{Method \code{unstructure_weights()}}{
double inner product weights for complex vectors
to appear in both dimensions in numeric long format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$unstructure_weights(weights_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{weights_}}{numeric vector of inner product weights matching the \code{y_}
as a complex vector.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-structure_weights"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-structure_weights}{}}}
\subsection{Method \code{structure_weights()}}{
remove double weights to obtain
inner product weights for complex vectors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$structure_weights(weights)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{weights}}{numeric vector of inner product weights matching the \code{y}
as a numeric vector. \code{weights_} are duplicated for values of both dimensions.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-register"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-register}{}}}
\subsection{Method \code{register()}}{
center \code{y_} and scale it to unit norm.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$register(y_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a complex vector on the sphere, orthogonal to the constant.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-register_v"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-register_v}{}}}
\subsection{Method \code{register_v()}}{
orthogonally project \code{v_} into the tangent space of \code{y0_}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$register_v(v_, y0_ = self$pole_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v_}}{a complex tangent vector.}

\item{\code{y0_}}{a complex vector on the sphere, orthogonal to the constant.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-log"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-log}{}}}
\subsection{Method \code{log()}}{
Apply Log function of the sphere after rotation alignment
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$log(
  y_,
  y0_ = self$pole_,
  method = c("simple", "alternative")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a complex vector on the sphere, orthogonal to the constant.}

\item{\code{y0_}}{a complex vector on the sphere, orthogonal to the constant.}

\item{\code{method}}{alternatives "simple" and "alternative" for the expression
used to compute the sphere Log-map. Passed to parent method.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-transport"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-transport}{}}}
\subsection{Method \code{transport()}}{
for the parallel transport previous alignment is assumed,
such that the transport of the sphere is directly applied.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$transport(
  v0_,
  y0_,
  y1_,
  method = c("horizontal", "simple", "general")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v0_}}{a complex tangent vector.}

\item{\code{y0_}}{a complex vector on the sphere, orthogonal to the constant.}

\item{\code{y1_}}{a complex vector on the sphere, orthogonal to the constant.}

\item{\code{method}}{expression used for parallel transport: "general" corresponds to the one of
Cornea et al. 2017, "horizontal" to the one of Dryden & Mardia 2012 p. 76,
and "simple" to a simplified version of "general" where \code{v0_}
is horizontal to \code{y0_}. Passed to parent method.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-plot"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-plot}{}}}
\subsection{Method \code{plot()}}{
default plotting function for planar shapes, plotting \code{y_}
in front of \code{y0_} (after alignment).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$plot(
  y_ = self$y_,
  y0_ = self$pole_,
  ylab = NA,
  xlab = NA,
  col = "black",
  ylim = range(Im(c(y_, y0_))),
  xlim = range(Re(c(y_, y0_))),
  pch = 19,
  asp = 1,
  yaxt = "n",
  xaxt = "n",
  type = "p",
  y0_par = list(col = "darkgrey", type = type),
  seg_par = list(col = "grey"),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a complex vector on the sphere, orthogonal to the constant.}

\item{\code{y0_}}{a complex vector on the sphere, orthogonal to the constant.}

\item{\code{ylab, xlab, xlim, ylim, xaxt, yaxt, asp}}{graphical parameters passed to \code{base::plot}
with modified defaults.}

\item{\code{col, pch, type}}{graphical parameters passed to \code{base::plot} referring to \code{y_}.}

\item{\code{y0_par}}{graphical parameters for \code{y0_}.}

\item{\code{seg_par}}{graphical parameters for line segments connecting \code{y_}
and \code{y0_}.}

\item{\code{...}}{other arguments passed to \code{base::plot}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-validate"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-validate}{}}}
\subsection{Method \code{validate()}}{
check whether \code{is.complex(y_)}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$validate(y_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y_}}{a complex vector on the sphere, orthogonal to the constant.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-get_normal"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-get_normal}{}}}
\subsection{Method \code{get_normal()}}{
Obtain "design matrix" of tangent space normal vectors in
unstructured long format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$get_normal(y0_ = self$pole_, weighted = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y0_}}{a complex vector on the sphere, orthogonal to the constant.}

\item{\code{weighted}}{logical, should inner product weights be pre-multiplied to
normal vectors?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mfGeomPlanarShape-clone"></a>}}
\if{latex}{\out{\hypertarget{method-mfGeomPlanarShape-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mfGeomPlanarShape$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
